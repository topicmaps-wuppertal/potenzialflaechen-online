{"version":3,"sources":["components/LoginForm.js","components/SteckbriefActionFactory.js","components/TitleControl.js","components/Waiting.js","utils/convertItemToSimpleFeature.js","components/FeatureCollection.js","utils/filterFunction.js","components/InfoBox.js","version.js","components/MenuFooter.js","components/onlinehelpsections/010_Ueberblick.js","components/onlinehelpsections/020_Fachdatenquellen.js","components/onlinehelpsections/030_Hintergrundkarte.js","components/onlinehelpsections/040_Kartendarstellung.js","components/onlinehelpsections/050_FlaechenAuswaehlen.js","components/onlinehelpsections/052_Datenblattansicht.js","components/onlinehelpsections/054_Steckbriefe.js","components/onlinehelpsections/060_InKartePositionieren.js","components/onlinehelpsections/070_MeinStandort.js","components/onlinehelpsections/080_Filterung.js","components/onlinehelpsections/090_AnmeldungUndOfflineBenutzung.js","components/Menu.js","components/SecondaryInfo.js","PotenzialflaechenOnlineMap.js","offlineConfig.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["LoginForm","setJWT","jwt","console","log","loginInfo","setLoginInfo","windowSize","useContext","ResponsiveTopicMapContext","pwFieldRef","useRef","userFieldRef","modalBodyStyle","overflowY","overflowX","maxHeight","height","useState","user","_setUser","pw","setPw","cacheDataAvailable","setCacheDataAvailable","window","localforage","setUser","setItem","appKey","useEffect","a","getItem","userInCache","apiUrl","dataDaqKey","dataValueInCache","undefined","current","focus","select","login","fetch","method","headers","Authorization","btoa","then","response","status","json","responseWithJWT","color","text","setTimeout","catch","err","Modal","style","zIndex","size","show","keyboard","Header","Title","Icon","name","Body","id","Form","Group","controlId","Label","Control","value","ref","onChange","e","target","onKeyPress","event","key","placeholder","type","width","display","alignItems","flexDirection","justifyContent","margin","maxWidth","flexShrink","Button","onClick","CACHE_JWT","marginTop","variant","SteckbriefActionFactory","setWaiting","item","action","icon","title","nummer","taskParameters","parameters","POTENZIALFLAECHE","parseInt","fd","FormData","append","Blob","JSON","stringify","body","content","res","pdfUrl","blob","newBlob","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","iconname","tooltip","dateInfo","secondaryInfo","jwtPayload","actiontext","logout","metaInformation","FeatureCollectionContext","t","time","Date","toLocaleString","atob","split","parse","sub","titleContent","float","paddingRight","position","left","top","textAlign","verticalAlign","background","opacity","paddingLeft","Waiting","waiting","selectedFeature","properties","marginLeft","convert","_item","geometry","geojson","bezeichnung","kampagne","info","header","subtitle","groesse","selected","crs","dayjs","extend","customParseFormat","FC","zoomToFeature","TopicMapDispatchContext","FeatureCollectionDispatchContext","setItems","setMetaInformation","md5ActionFetchDAQ","result","toDate","data","features","push","convertItemToFeature","polyIndex","createFlatbushIndex","i","feature","hits","findInFlatbush","hit","overlapping","length","featureArea","area","intersection","intersectionRatio","intersect","problem","FeatureCollection","featureClickHandler","originalEvent","stopImmediatePropagation","itemFilterFunction","filterState","kampagnen","includes","InfoBox","props","featureCollectionContext","setSelectedFeatureByPredicate","overlappingHeaders","counter","isActive","overlap","paddingBottom","cursor","InfoBoxHeader","headerColor","GenericInfoBoxFromFeature","secondaryInfoBoxElements","APPERSION","Footer","setAppMenuActiveMenuSection","UIDispatchContext","fontSize","className","scroller","scrollTo","containerId","reactCismapVersion","rel","Ueberblick","Fachdatenquellen","Hintergrundkarten","class","to","slugify","activeClass","ThematischerDurchstich","Infobox","faSearch","faInfoCircle","faFilePdf","faChevronCircleDown","faChevronCircleUp","InKartePositionieren","defaultContextValues","inKartePositionieren","grosseZoomstufe","listAddendum","overlay","MeinStandort","GenericHelpTextForMyLocation","ObjekteSuchen","faBars","AnmeldungUndOfflineBenutzung","MyMenu","filterMode","filteredItems","shownFeatures","setFilterState","setFilterMode","items","kampagnenValues","iconPos","order","order_by","sort","b","kampagnenvalue","filterConfiguration","mode","resetedFilter","filters","values","setAll","setNone","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","smooth","delay","menuSections","Section","sectionKey","sectionTitle","term","count","getFilterHeader","sectionBsStyle","sectionContent","FilterPanel","DefaultSettingsPanel","skipFilterTitleSettings","skipClusteringSettings","skipSymbolsizeSetting","ConfigurableDocBlocks","configs","bsStyle","contentBlockConf","menuFooter","MenuFooter","InfoPanel","potenzialflaeche","subSections","desc","valFunc","Array","isArray","join","lagebewertung_verkehr","oepnv","naehe_zu","siedlungsraeumliche_lage","topografie","hang","SecondaryInfoPanelSection","padding","paddingTop","regionalplan","bplaene","festsetzungen_bplan","bauordnungsrecht_genehmigung","stand_bauordnungsrecht","umgebungsnutzung","brachflaechen","jahr_brachflaeche","bisherige_nutzung","bestand_bebauung","versiegelung","aeussere_erschliessung","wohnlagen","klimainformationen","beschreibung_flaeche","map","part","index","quelle","stand","d","date","getDate","getMonth","getFullYear","notwendige_massnahmen","kategorie","potenzialart","entwicklungsstand","restriktionen","empfohlene_nutzungen_wohnen","wohneinheiten","entwicklungsaussichten","verfuegbarkeit","verwertbarkeit","handlungsprioritaet","empfohlene_nutzungen","revitalisierung","handlungsdruck","anzahl_wohneinheiten","URLSearchParams","location","get","SecondaryInfo","titleIconName","mainSection","Math","round","stadtbezirke","sb","quartiere","q","eigentuemer","defaultLayerConf","namedLayers","cismetLight","PotenzialflaechenOnlineMap","gazData","history","TopicMapContext","setAppMenuVisible","handleCleanStart","search","newSearch","removeQueryPart","listen","TopicMapComponent","mapStyle","backgroundColor","applicationMenuTooltipString","homeZoom","maxZoom","locatorControl","modalMenu","infoBox","pixelwidth","config","displaySecondaryInfoAction","city","navigator","noun","singular","plural","noCurrentFeatureTitle","noCurrentFeatureContent","gazetteerHitTrigger","more","pid","check","offlineConfig","rules","origin","cachePath","realServerFallback","dataStores","offlineStyles","consoleDebug","optional","initialActive","baseLayerConf","offlineAvailable","offlineDataStoreKey","host","selectionColor","Color","getGazData","setStaticGazData","prefix","sources","md5FetchText","adressen","bezirke","pois","kitas","getGazDataForTopicIds","App","staticGazData","dynGazData","setDynGazData","setGazData","backgroundModes","_setJWT","jwtInCache","potenzialflaechenGazResult","getInternetExplorerVersion","layerKey","TopicMapContextProvider","backgroundConfigurations","lbk","layerkey","src","stadtplan","vector","abkg","offlineCacheConfig","referenceSystem","MappingConstants","crs3857","mapEPSGCode","referenceSystemDefinition","proj4crs3857def","maskingPolygon","getColorFromProperties","classKeyFunction","f","convertItemToSimpleFeature","genericLinks","alwaysShowAllFeatures","getFeatureStyler","borderColor","fillOpacity","c","darken","radius","weight","fillColor","featureTooltipFunction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","process","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.357356ce.chunk.js","sourcesContent":["import localforage from \"localforage\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\nimport { apiUrl, appKey, dataDaqKey } from \"../App\";\n\nconst LoginForm = ({\n  setJWT = (jwt) => {\n    console.log(\"you need to set the attribute setJWT in the <Login> component\", jwt);\n  },\n  loginInfo,\n  setLoginInfo = () => {},\n}) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const pwFieldRef = useRef();\n  const userFieldRef = useRef();\n  const _height = windowSize?.height || 800 - 180;\n  const modalBodyStyle = {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    maxHeight: _height,\n  };\n  const [user, _setUser] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cacheDataAvailable, setCacheDataAvailable] = useState(false);\n\n  window.localforage = localforage;\n  const setUser = (user) => {\n    /*eslint no-useless-concat: \"off\"*/\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\", user);\n    _setUser(user);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const userInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\");\n      const dataValueInCache = await localforage.getItem(\n        \"@\" + appKey + \"..\" + apiUrl + \".\" + dataDaqKey + \".data\"\n      );\n\n      setCacheDataAvailable(dataValueInCache !== null && dataValueInCache !== undefined);\n      if (userInCache) {\n        setUser(userInCache);\n      }\n      if (userFieldRef?.current) {\n        userFieldRef.current.focus();\n        userFieldRef.current.select();\n      }\n    })();\n  }, []);\n\n  const login = () => {\n    fetch(\"https://potenzialflaechen-online-api.cismet.de/users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Basic \" + btoa(user + \"@\" + \"WUNDA_BLAU\" + \":\" + pw),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          response.json().then(function (responseWithJWT) {\n            const jwt = responseWithJWT.jwt;\n            setLoginInfo({\n              color: \"#79BD9A\",\n              text: \"Anmeldung erfolgreich. Daten werden geladen.\",\n            });\n            setTimeout(() => {\n              setJWT(jwt);\n              setLoginInfo();\n            }, 500);\n          });\n        } else {\n          setLoginInfo({\n            color: \"#FF8048\",\n            text: \"Bei der Anmeldung ist ein Fehler aufgetreten. \",\n          });\n          setTimeout(() => {\n            setLoginInfo();\n          }, 2500);\n        }\n      })\n      .catch(function (err) {\n        setLoginInfo({ color: \"#FF3030\", text: \"Bei der Anmeldung ist ein Fehler aufgetreten.\" });\n        setTimeout(() => {\n          setLoginInfo();\n        }, 2500);\n      });\n  };\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='100%'\n      size='l'\n      show={true}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <div>\n            <div>\n              <IconComp name={\"user\"} /> Anmeldung\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={modalBodyStyle} id='potenzialflaechen-online' key='login'>\n        <Form>\n          <Form.Group controlId='potenzialflaechen-online-login'>\n            <Form.Label>WuNDa Benutzername</Form.Label>\n            <Form.Control\n              value={user}\n              ref={userFieldRef}\n              onChange={(e) => {\n                setUser(e.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  // login();\n                  if (pwFieldRef.current) {\n                    pwFieldRef.current.focus();\n                  }\n                }\n              }}\n              placeholder='Login hier eingeben'\n            />\n            {/* <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n\n          <Form.Group controlId='potenzialflaechen-online-pass'>\n            <Form.Label>Passwort</Form.Label>\n            <Form.Control\n              ref={pwFieldRef}\n              value={pw}\n              onChange={(e) => {\n                setPw(e.target.value);\n              }}\n              type='password'\n              placeholder='Password'\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  login();\n                }\n              }}\n            />\n          </Form.Group>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"baseline\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {loginInfo?.text && (\n              <div style={{ margin: 10, color: loginInfo?.color || \"black\", maxWidth: 200 }}>\n                <b>{loginInfo?.text}</b>\n              </div>\n            )}\n            <div style={{ flexShrink: 100 }}></div>\n            <div>\n              {cacheDataAvailable === true && (\n                <Button\n                  onClick={(e) => {\n                    setLoginInfo({\n                      color: \"#79BD9A\",\n                      text: \"Alte Daten werden aus dem Cahe übernommen.\",\n                    });\n                    setTimeout(() => {\n                      setJWT(CACHE_JWT);\n                      setLoginInfo();\n                    }, 500);\n                  }}\n                  style={{ margin: 5, marginTop: 30 }}\n                  variant='secondary'\n                >\n                  Offline arbeiten\n                </Button>\n              )}\n              <Button\n                onClick={(e) => {\n                  login();\n                }}\n                style={{ margin: 5, marginTop: 30 }}\n                variant='primary'\n              >\n                Anmeldung\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nexport default LoginForm;\n","import { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst SteckbriefActionFactory = ({ setWaiting, item, jwt, setJWT, setLoginInfo }) => {\n  return {\n    action: () => {\n      if (jwt && jwt !== CACHE_JWT) {\n        setWaiting({\n          icon: \"file-pdf\",\n          title: \"Steckbrief \" + item.nummer + \" wird erzeugt\",\n          text: \"Nachdem der Steckbrief fertiggestellt wurde, startet automatisch der Download.\",\n        });\n        let taskParameters = {\n          parameters: {\n            POTENZIALFLAECHE: parseInt(item.id),\n          },\n        };\n\n        let fd = new FormData();\n        fd.append(\n          \"taskparams\",\n          new Blob([JSON.stringify(taskParameters)], {\n            type: \"application/json\",\n          })\n        );\n        fetch(\n          // \"https://potenzialflaechen-online-api.cismet.de/users\",\n          // \"https://eniptvf9euuoeze.m.pipedream.net\",\n\n          \"https://potenzialflaechen-online-api.cismet.de/actions/WUNDA_BLAU.potenzialflaecheReport/tasks?resultingInstanceType=result\",\n          {\n            method: \"POST\",\n            // method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + jwt,\n              // \"Content-Type\": \"application/json\",\n              // Accept: \"application/json\",\n            },\n            body: fd,\n          }\n        )\n          .then(function (response) {\n            if (response.status >= 200 && response.status < 300) {\n              response.json().then(function (content) {\n                console.log(\"response from cids\", content);\n                if (content.res) {\n                  //\n                  const pdfUrl =\n                    \"https://potenzialflaechen-online-api.cismet.de\" +\n                    \"/secres/\" +\n                    jwt +\n                    \"/potenzialflaecheReportExt/\" +\n                    content.res;\n                  try {\n                    fetch(pdfUrl).then((response) => {\n                      response.blob().then((blob) => {\n                        const newBlob = new Blob([blob], { type: \"application/pdf\" });\n                        const url = window.URL.createObjectURL(newBlob);\n                        var link = document.createElement(\"a\");\n                        link.href = url;\n                        link.download = \"Steckbrief.\" + item.nummer + \".pdf\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                      });\n                    });\n                  } catch (e) {\n                    console.log(\"Probleme beim Laden des Reports\", e, pdfUrl);\n                  }\n                } else {\n                  console.log(\"Probleme beim Erzeugen des Reports\");\n                }\n                setWaiting();\n              });\n            } else {\n              if (response.status === 401) {\n                setWaiting();\n                setJWT(undefined);\n                setLoginInfo({\n                  color: \"#F9D423\",\n                  text: \"Bitte melden Sie sich erneut an.\",\n                });\n                setTimeout(() => {\n                  setLoginInfo();\n                }, 2500);\n              }\n              // response.text().then((x) => {189\t60\t90\n              //   console.log(\"error\", x);\n              // });\n            }\n          })\n          .catch(function (err) {\n            ///\n            setWaiting();\n          });\n\n        // setTimeout(() => {\n        //   setWaiting();\n        // }, 2500);\n      } else {\n        setWaiting({\n          icon: \"file-pdf\",\n          title: \"Steckbrief \" + item.nummer,\n          text: \"Steckbriefe können im Offline Modus leider nicht erzeugt werden. ¯\\\\_(ツ)_/¯ \",\n        });\n        setTimeout(() => {\n          setWaiting();\n        }, 2500);\n      }\n    },\n    iconname: \"file-pdf\",\n    tooltip: \"Steckbrief erzeugen\" + (jwt === CACHE_JWT ? \" (Im Offline Modus nicht möglich)\" : \"\"),\n  };\n};\n\nexport default SteckbriefActionFactory;\n","import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst Title = ({ logout, jwt }) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { metaInformation } = useContext(FeatureCollectionContext);\n  let dateInfo;\n  if (metaInformation) {\n    const t = metaInformation.time;\n    const d = new Date(t);\n    dateInfo = d.toLocaleString();\n  }\n\n  let secondaryInfo, jwtPayload, actiontext;\n  if (jwt === CACHE_JWT) {\n    secondaryInfo = \"Daten aus dem Cache\"; //;+ metaInformation.time;\n    actiontext = \"anmelden und Daten aktualisieren\";\n  } else {\n    try {\n      jwtPayload = atob(jwt.split(\".\")[1]);\n      secondaryInfo = JSON.parse(jwtPayload).sub;\n      actiontext = \"abmelden\";\n    } catch (e) {}\n  }\n  /*eslint jsx-a11y/anchor-is-valid: \"off\"*/\n  const titleContent = (\n    <div>\n      <b>Potenzialflächen-Online</b> (\n      {secondaryInfo + (dateInfo !== undefined ? \", \" + dateInfo : \"\")})\n      <div style={{ float: \"right\", paddingRight: 10 }}>\n        <a\n          style={{ color: \"#337ab7\" }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          {/* <FontAwesomeIcon icon={faRandom} style={{ marginRight: 5 }} /> */}\n          {actiontext}\n        </a>\n      </div>\n    </div>\n  );\n\n  return (\n    <table\n      style={{\n        width: (windowSize?.width || 300) - 54 - 12 - 38 - 12 + \"px\",\n        height: \"30px\",\n        position: \"absolute\",\n        left: 54,\n        top: 12,\n        zIndex: 555,\n      }}\n    >\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              background: \"#ffffff\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            {titleContent}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Title;\n","import { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport ReactLoading from \"react-loading\";\n\nconst Waiting = ({ waiting }) => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='200'\n      size='s'\n      show={waiting !== undefined}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <IconComp name={waiting?.icon} /> {waiting?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n          <ReactLoading type={\"cylon\"} color={selectedFeature?.properties.color} />{\" \"}\n          <div style={{ marginLeft: 20 }}>{waiting?.text}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Waiting;\n","const convert = (_item) => {\n  const item = JSON.parse(JSON.stringify(_item));\n\n  const geometry = item?.geojson;\n  const selected = false;\n  const type = \"Feature\";\n  const text = item?.bezeichnung;\n\n  item.color = item?.kampagne?.color;\n\n  const info = {\n    header: item?.kampagne?.bezeichnung,\n    title: text,\n    subtitle:\n      \"<html><div><b>Nummer:</b> \" +\n      item?.nummer +\n      \"</div><div><b>Größe:</b> \" +\n      parseInt(item?.groesse, 10).toLocaleString() +\n      \" m²</div></html>\",\n  };\n  item.info = info;\n\n  return {\n    id: item.id,\n    text,\n    type,\n    selected,\n    geometry,\n    crs: geometry?.crs || {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\nexport default convert;\n","import area from \"@turf/area\";\nimport intersect from \"@turf/intersect\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { useContext, useEffect } from \"react\";\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { TopicMapDispatchContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport { md5ActionFetchDAQ } from \"react-cismap/tools/fetching\";\nimport { createFlatbushIndex, findInFlatbush } from \"react-cismap/tools/gisHelper\";\nimport { apiUrl, dataDaqKey } from \"../App\";\nimport { appKey } from \"../PotenzialflaechenOnlineMap\";\nimport convertItemToFeature from \"../utils/convertItemToSimpleFeature\";\ndayjs.extend(customParseFormat);\n\nconst FC = ({ jwt, setJWT, setLoginInfo }) => {\n  const { zoomToFeature } = useContext(TopicMapDispatchContext);\n  const { setItems, setMetaInformation } = useContext(FeatureCollectionDispatchContext);\n\n  useEffect(() => {\n    if (jwt !== undefined) {\n      md5ActionFetchDAQ(appKey, apiUrl, jwt, dataDaqKey)\n        .then(\n          (result) => {\n            //parse e.g. 2021-06-23 06:51:56.97500\n            const time = dayjs(result.time, \"YYYY-MM-DD hh:mm:ss\").toDate();\n            if (!result.data) {\n              return;\n            }\n            //Check for sibblings and add them to the original data\n            // console.time(\"xxx sibblingsCheck\");\n            const features = [];\n            for (const item of result.data) {\n              features.push(convertItemToFeature(item));\n            }\n            const polyIndex = createFlatbushIndex(features);\n\n            let i = 0;\n            for (const feature of features) {\n              const hits = findInFlatbush(polyIndex, feature, features, (hit) => {\n                return hit.id !== feature.id;\n              });\n              const overlapping = [];\n              if (hits.length > 0) {\n                const featureArea = area(feature);\n                for (const hit of hits) {\n                  let intersection, intersectionArea;\n                  let intersectionRatio = 1;\n                  try {\n                    intersection = intersect(feature.geometry, hit.geometry);\n                    if (intersection) {\n                      intersectionArea = area(intersection);\n                    } else {\n                      intersectionArea = 0;\n                    }\n                    intersectionRatio = intersectionArea / featureArea;\n                  } catch (e) {\n                    console.log(\"error during intersection \", e);\n                    console.log(\"error during intersection \", intersection);\n                  }\n\n                  if (intersectionRatio > 0.1) {\n                    overlapping.push({ id: hit.properties.id, kampagne: hit.properties.kampagne });\n                  } else {\n                    // console.log(\"no hit for \", hit.text);\n                  }\n                }\n              }\n\n              // result.data[i].geojson = buffered.geometry;\n              result.data[i].overlapping = overlapping;\n              ++i;\n            }\n            // console.timeEnd(\"xxx sibblingsCheck\");\n\n            setItems(result.data);\n            setMetaInformation({ time });\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n            setItems([]);\n            setMetaInformation();\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n    } else {\n      setItems([]);\n    }\n  }, [jwt, setJWT, setLoginInfo]); // setItems, setMetaInformation swill rerrender too often\n  return (\n    <FeatureCollection\n      featureClickHandler={(event) => {\n        event.originalEvent.stopImmediatePropagation();\n        const feature = event.target.feature;\n        if (feature.selected === true) {\n          zoomToFeature(event.target.feature);\n        }\n        // }\n      }}\n    />\n  );\n};\n\nexport default FC;\n","const itemFilterFunction = ({ filterState }) => {\n  return (item) => {\n    return filterState?.kampagnen?.includes(item.kampagne.bezeichnung);\n  };\n};\nexport default itemFilterFunction;\n","import { useContext } from \"react\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\nimport InfoBoxHeader from \"react-cismap/topicmaps/InfoBoxHeader\";\nimport itemFilterFunction from \"../utils/filterFunction\";\nconst InfoBox = (props) => {\n  const featureCollectionContext = useContext(FeatureCollectionContext);\n  const { setSelectedFeatureByPredicate } = useContext(FeatureCollectionDispatchContext);\n  const { selectedFeature, filterState } = featureCollectionContext;\n\n  const overlappingHeaders = [];\n  let counter = 1;\n  const isActive = itemFilterFunction({ filterState });\n\n  if (selectedFeature?.properties?.overlapping) {\n    for (const overlap of selectedFeature.properties.overlapping) {\n      if (isActive(overlap)) {\n        overlappingHeaders.push(\n          <div\n            style={{\n              width: 350,\n              paddingBottom: 3,\n              paddingLeft: counter * 5,\n\n              cursor: \"pointer\", //is a hand\n            }}\n            onClick={() => {\n              setSelectedFeatureByPredicate((feature) => {\n                return feature?.properties?.id === overlap.id;\n              });\n            }}\n          >\n            <InfoBoxHeader\n              headerColor={overlap.kampagne.color}\n              content={overlap.kampagne.bezeichnung}\n            ></InfoBoxHeader>\n          </div>\n        );\n      }\n      counter++;\n    }\n  }\n\n  return (\n    <div>\n      <GenericInfoBoxFromFeature {...props} secondaryInfoBoxElements={overlappingHeaders} />\n    </div>\n  );\n};\n\nexport default InfoBox;\n","const APPERSION = \"1.2.4\";\nconst APPHASH = \"#bbfd211d0b23849bb0711f4376aa655f7ac2d05d\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { scroller } from \"react-scroll\";\nimport { getApplicationVersion } from \"../version\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  /*eslint jsx-a11y/anchor-is-valid: \"off\"*/\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal |\n      Openmaptiles basierte Vectorkarte (hosted by cismet){\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","const Ueberblick = () => {\n  return (\n    <div>\n      <p>\n        Nach § 200 Baugesetzbuch können Gemeinden bebaubare Flächen in Karten und Listen erfassen\n        (Baulandkataster). In Wuppertal wurde hierzu im Jahr 2021 in Zusammenarbeit der Ressorts 101\n        (Stadtentwicklung und Städtebau) und 102 (Vermessung, Katasteramt und Geodaten) das\n        Fachverfahren <strong>WuNDa/Potenzialflächen</strong> innerhalb des Wuppertaler Navigations-\n        und Datenmanagementsystems WuNDa realisiert. In diesem Verfahren werden nunmehr die zuvor\n        getrennt verwalteten Flächen aller Kategorien von städtebaulichen Potenzialflächen\n        georeferenziert digitalisiert und in einem übergeordneten, gemeinsamen Datenmodell\n        beschrieben. Unterschieden werden dabei die Kategorien Gewerbepotenzialflächen,\n        Wohnbaupotenzialflächen, Wiedernutzungspotenziale, Baulücken und Brachflächen. In\n        WuNDa/Potenzialflächen erfolgt auch die laufende Aktualisierung der Daten durch die\n        Abteilung 101.1 Stadtentwicklung.\n      </p>\n      <p>\n        Um die Informationen aus WuNDa/Potenzialflächen für alle beteiligten Akteurinnen und Akteure\n        in den politischen Gremien und der Verwaltung verfügbar zu machen, wurde die hier\n        vorliegende, nicht öffentlich zugängliche Web-Anwendung{\" \"}\n        <strong>Potenzialflächen-Online</strong> entwickelt. Sie erlaubt es, mit verschiedenen\n        (insbesondere auch mobilen) Endgeräten ortsunabhängig auf die freigegebenen Daten des\n        Fachverfahrens zuzugreifen. Zum Zeitpunkt der Inbetriebnahme von Potenzialflächen-Online im\n        Juni 2022 war die Überarbeitung der Brachflächen-Daten im neuen Datenmodell noch nicht\n        abgeschlossen, sodass die Flächendaten aus dieser Kategorie anfänglich noch nicht angeboten\n        werden. Das Baulückenkataster als Teilkategorie von WuNDa/Potenzialflächen befand sich im\n        Juni 2022 im erstmaligen systematischen Aufbau für das gesamte Wuppertaler Stadtgebiet.\n        Hierbei wird stadtbezirksweise vorgegangen. In Potenzialflächen-Online sind nur die Daten\n        der vollständig bearbeiteten Stadtbezirke verfügbar, beginnend mit den Stadtbezirken\n        Ronsdorf und Uellendahl-Katernberg.\n      </p>\n      <p>\n        Neben der <strong>Kartendarstellung</strong> einer jeden Potenzialfläche können alle\n        weiteren Informationen zur jeweiligen Fläche in einer interaktiven{\" \"}\n        <strong>Datenblattansicht</strong> oder einem <strong>PDF-Steckbrief</strong> abgerufen\n        werden. Die Daten umfassen u. a. die Flächennummer (beginnend mit der Stadtbezirksnummer),\n        die Bezeichnung der Fläche, ihre Größe (in m² und gerundet in ha), die betroffenen\n        Stadtbezirke und Quartiere, die Eigentümerkategorie (anonymisiert), Lagebeschreibungen\n        (bezogen auf Verkehr, den Siedlungsraum und die Topografie), das geltende Planungsrecht\n        (Ausweisung im Regionalplan und Flächennutzungsplan, Angabe der betroffenen Bebauungspläne),\n        die Umgebungsnutzungen, die bisherige Nutzung mit der bestehenden Bebauung und Versiegelung,\n        die Wohnlagenklasse gemäß der{\" \"}\n        <a target='_more' href='https://offenedaten-wuppertal.de/dataset/wohnlagen-wuppertal'>\n          Wohnlagenkarte des Gutachterausschusses\n        </a>\n        , eine langtextliche Beschreibung der Fläche (u. a. mit Historie, Informationen und\n        Planungen) sowie (soweit einschätzbar) verschiedene Bewertungen des Entwicklungspotenzials\n        der Fläche (Innen- oder Außenentwicklung, Potenzialarten, Restriktionen, empfohlene Nutzung,\n        Entwicklungsaussichten, Verfügbarkeit, Verwertbarkeit, Revitalisierung, Handlungsdruck,\n        Handlungspriorität).\n      </p>\n      <p>\n        Die Potenzialflächen können über das Eingabefeld nach Bezugsflächen (Stadtbezirk und\n        Quartier) oder durch Eingabe von entsprechenden Kürzeln nach ihrer Kategorie gefiltert\n        werden. Über die Eingabe ihrer Bezeichnung im Eingabefeld kann eine Fläche auch direkt\n        gesucht und in der Karte angesprungen werden. Die Fachdaten zu den Potenzialflächen und eine\n        Vektor-Hintergrundkarte werden in den Cache-Speicher der Kartenanwendung geladen, sodass\n        diese mit geringen Einschränkungen auch im Offline-Modus genutzt werden kann. Das Arbeiten\n        im Offline-Modus ist sinnvoll, wenn sich der Einsatzort in einem Bereich mit schwacher oder\n        unzuverlässiger Mobilfunknetzabdeckung befindet (&quot;Funklöcher&quot;).\n      </p>\n      <p>\n        Anmerkungen und Hinweise können an{\" \"}\n        <a href='mailto:potenzialfl%C3%A4chen@stadt.wuppertal.de'>\n          potenzialflaechen@stadt.wuppertal.de\n        </a>{\" \"}\n        (R 101.11 Integrierte Stadtentwicklung und regionale Kooperation) gesendet werden.{\" \"}\n      </p>\n    </div>\n  );\n};\nexport default Ueberblick;\n","const Fachdatenquellen = () => {\n  return (\n    <div>\n      <p>\n        In Potenzialflächen-Online werden die folgenden Kategorien von städtebaulichen\n        Potenzialflächen angeboten:{\" \"}\n      </p>\n      <ul>\n        <li>\n          <strong>Gewerbepotenzialflächen</strong>: Regionalplanerisch gesicherte Flächen mit einer\n          Größe von mehr als 2.000 m², auf denen mit oder ohne Flächennutzungsplan- und / oder\n          Bebauungsplanänderungen gewerbliche Nutzungen erfolgen können und vorgesehen sind. Etliche\n          Gewerbepotenzialflächen sind Brachflächen oder Wiedernutzungspotenziale und werden auch in\n          diesen Kategorien geführt. Seit Ende der 1990er Jahre werden Gewerbeflächenpotenziale in\n          Handlungsprogrammen systematisch erhoben, zuletzt im{\" \"}\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=12384'>\n            Handlungsprogramm Gewerbeflächen von 2011\n          </a>{\" \"}\n          (\n          <a target='_more' href='https://ris.wuppertal.de/to0050.php?__ktonr=50039'>\n            Ratsbeschluss vom 23.05.2011\n          </a>\n          ) mit{\" \"}\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=18635'>\n            Fortschreibung im Jahr 2017\n          </a>{\" \"}\n          (\n          <a target='_more' href='https://ris.wuppertal.de/to0050.php?__ktonr=83736'>\n            Ratsbeschluss vom 07.05.2018\n          </a>\n          ) und{\" \"}\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=24105'>\n            Aktualisierung im Jahr 2020\n          </a>{\" \"}\n          (Ratsvorlage vom 22.06.2020). Durchgreifende Überarbeitung für die laufende Pflege mit\n          WuNDa/Potenzialflächen im Jahr 2021.\n        </li>\n        <li>\n          <strong>Wohnbaupotenzialflächen</strong>: Regionalplanerisch gesicherte Flächen mit einer\n          Größe von mehr als 2.000 m², auf denen mit oder ohne Flächennutzungsplan- und / oder\n          Bebauungsplanänderungen wohnbauliche Nutzungen erfolgen können und seitens der\n          Stadtentwicklung vorgesehen sind. Etliche Wohnbaupotenzialflächen sind Brachflächen oder\n          Wiedernutzungspotenziale und werden auch in diesen Kategorien geführt. Erstmalige\n          systematische Erhebung im Rahmen des Aufstellungsverfahrens für den Flächennutzungsplan\n          2005, Aktualisierung und Ergänzungen für das Handlungsprogramm Wohnen (Ratsbeschluss vom\n          29.06.2009), das Konzept &quot;\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=23214'>\n            Neue Wohnbauflächen für Wuppertal\n          </a>\n          &quot; (\n          <a target='_more' href='https://ris.wuppertal.de/to0050.php?__ktonr=100704'>\n            Ratsbeschluss vom 22.06.2020\n          </a>\n          ) und das{\" \"}\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=24476'>\n            Innenentwicklungskonzept Wuppertal\n          </a>{\" \"}\n          (\n          <a target='_more' href='https://ris.wuppertal.de/to0050.php?__ktonr=102431'>\n            Ratsbeschluss vom 07.12.2020\n          </a>\n          ). Durchgreifende Überarbeitung für die laufende Pflege mit WuNDa/Potenzialflächen im Jahr\n          2021.\n        </li>\n        <li>\n          <strong>Wiedernutzungspotenziale</strong>: Flächen mit einer Größe von mehr als 2.000 m²,\n          die perspektivisch als Potenzial für neue Nutzungen dienen können. Entweder ist eine\n          Nutzungsaufgabe konkret geplant, obwohl sich die Fläche noch in Nutzung befindet oder die\n          Fläche ist bereits wie eine Brachfläche nach Aufgabe einer gewerblich-industriellen oder\n          sonstigen baulichen Nutzung ungenutzt bzw. deutlich mindergenutzt oder funktionslos,\n          jedoch erst für einen kurzen Zeitraum und noch nicht mindestens zwei Jahre (sog.\n          &quot;junge&quot; Brache). Wiedernutzungspotenziale werden je nach Nutzungsperspektive\n          auch in anderen Kategorien geführt. Systematischer Aufbau dieser Kategorie für die\n          zukünftige laufende Pflege mit WuNDa/Potenzialflächen in der ersten Jahreshälfte 2022\n          durch Neuerfassungen und Übernahme von Flächen aus den anderen Kategorien.{\" \"}\n        </li>\n        <li>\n          <strong>Baulücken</strong>: Flächen mit einer Größe von 400 bis 2.000 m², auf denen\n          bereits Baurecht in einem geltenden Bebauungsplan oder nach § 34 BauGB für eine\n          Wohnbebauung besteht und deren Erschließung entweder bereits gesichert ist oder über eine\n          Grundstücksteilung oder eine Baulast einfach gesichert werden kann. Baulücken sind\n          Baupotenziale auf unbebauten oder auf bereits bebauten Grundstücken\n          (Ergänzungspotenziale). Der Datenbestand wird stadtbezirksweise seit 2021 neu aufgebaut.\n          Stand Juni 2022 waren die Erhebungen für die Stadtbezirke Ronsdorf und\n          Uellendahl-Katernberg abgeschlossen.\n        </li>\n        <li>\n          <strong>Brachflächen</strong>: Nach Aufgabe einer gewerblich-industriellen oder sonstigen\n          baulichen Nutzung über einen Zeitraum von mindestens drei Jahren ungenutzte, deutlich\n          mindergenutzte oder funktionslose Flächen mit Potenzial für neue Nutzungen (Mindestgröße\n          2.000 m²). Erstmalige systematische Erhebung für das Handlungsprogramm Brachflächen im\n          Jahr 2005, erneuert mit dem{\" \"}\n          <a\n            target='_more'\n            href='https://ris.wuppertal.de/vo0050.php?__kvonr=17710&amp;voselect=13689'\n          >\n            Handlungsprogramm Brachflächen 2016\n          </a>{\" \"}\n          (Kenntnisnahme durch den Rat am 02.05.2016),{\" \"}\n          <a target='_more' href='https://ris.wuppertal.de/vo0050.php?__kvonr=20083'>\n            Fortschreibung im Jahr 2017\n          </a>{\" \"}\n          (Ratsvorlage vom 12.03.2018). Überarbeitung für die laufende Pflege mit\n          WuNDa/Potenzialflächen seit Mitte 2021. Vollständige Bereitstellung in\n          Potenzialflächen-Online geplant nach Abschluss dieser Überarbeitung.{\" \"}\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default Fachdatenquellen;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-scroll\";\nimport slugify from \"slugify\";\nconst Hintergrundkarten = () => {\n  return (\n    <div>\n      <p>\n        Im Anwendungsmenü <FontAwesomeIcon icon='bars' /> können Sie im Abschnitt{\" \"}\n        <strong>Einstellungen</strong> unter <strong>Hintergrundkarte</strong> festlegen, welche\n        Basiskarte als Hintergrund verwendet werden soll. Die folgenden Basiskarten stehen zur\n        Verfügung:\n      </p>\n      <ul>\n        <li>\n          <p>\n            <strong>Stadtplan (grau)</strong>: Kartendienst (WMS) des Regionalverbandes Ruhr (RVR).\n            Datengrundlage: Stadtkarte 2.0. Wöchentlich in einem automatischen Prozess aktualisierte\n            Zusammenführung des Straßennetzes der OpenStreetMap mit Amtlichen Geobasisdaten des\n            Landes NRW aus den Fachverfahren ALKIS (Gebäude, Flächennutzungen) und ATKIS (Gewässer).\n            © RVR und Kooperationspartner (\n            <a target='_more' href='https://www.govdata.de/dl-de/by-2-0'>\n              Datenlizenz Deutschland - Namensnennung - Version 2.0\n            </a>\n            ). Lizenzen der Ausgangsprodukte:{\" \"}\n            <a target='_more' href='https://www.govdata.de/dl-de/zero-2-0'>\n              Datenlizenz Deutschland - Zero - Version 2.0\n            </a>{\" \"}\n            (Amtliche Geobasisdaten) und{\" \"}\n            <a target='_more' href='https://www.opendatacommons.org/licenses/odbl/1.0/'>\n              ODbL\n            </a>{\" \"}\n            (OpenStreetMap contributors).\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Stadtplan (Vektordaten light)</strong>: Vektorkacheldienst (Vector tile service\n            gemäß{\" \"}\n            <a target='_more' href='https://github.com/mapbox/vector-tile-spec'>\n              Mapbox Vector Tile Specification\n            </a>\n            ) auf der Basis eines von der Firma cismet GmbH gehosteten Sekundärdatenbestandes der\n            OpenStreetMap Deutschland mit wöchentlicher Aktualisierung. Lizenz der Ausgangsdaten:{\" \"}\n            <a target='_more' href='https://www.opendatacommons.org/licenses/odbl/1.0/'>\n              ODbL\n            </a>{\" \"}\n            (OpenStreetMap contributors).\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Amtliche Basiskarte</strong>: (1) In Detailmaßstäben Kartendienst (WMS) der\n            Stadt Wuppertal. Datengrundlage: Amtliche Basiskarte ABK Graustufen (wöchentlich in\n            einem automatisierten Prozess aus dem Fachverfahren ALKIS des Liegenschaftskatasters\n            abgeleitete großmaßstäbige topographische Karte in Graustufen.) © Stadt Wuppertal (\n            <a target='_more' href='https://www.govdata.de/dl-de/zero-2-0'>\n              Datenlizenz Deutschland - Zero - Version 2.0\n            </a>\n            ). (2) In Übersichtsmaßstäben Kartendienst (WMS) des Bundesamtes für Kartographie und\n            Geodäsie (BKG). Datengrundlage: WebAtlasDE © GeoBasis-DE / BKG 2018.{\" \"}\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Luftbildkarte</strong>: (1) Kartendienst (WMS) der Stadt Wuppertal.\n            Datengrundlage: True Orthophoto aus Bildflügen vom 26. und 27.03.2020, hergestellt durch\n            Aerowest GmbH/Dortmund, Bodenauflösung 10 cm. (True Orthophoto: Aus Luftbildern mit\n            hoher Längs- und Querüberdeckung in einem automatisierten Bildverarbeitungsprozess\n            berechnetes Bild in Parallelprojektion, also ohne Gebäudeverkippung und sichttote\n            Bereiche.) © Stadt Wuppertal (\n            <a\n              target='_more'\n              href='https://www.wuppertal.de/geoportal/Nutzungsbedingungen/NB-GDIKOM-C_Geodaten.pdf'\n            >\n              NB-GDIKOM C\n            </a>\n            ). (2) Kartendienste (WMS) des Regionalverbandes Ruhr (RVR). Datengrundlagen: Stadtkarte\n            2.0 und Kartenschrift aus der Stadtkarte 2.0. Details s. Hintergrundkarte Stadtplan\n            (grau).\n          </p>\n        </li>\n      </ul>\n      <p>\n        Die Vektordaten von &quot;Stadtplan (Vektordaten light)&quot; werden beim Starten der\n        Anwendung auf das Endgerät übertragen, sofern das Kontrollkästchen &quot;Vektorlayer offline\n        verfügbar machen&quot; aktiviert ist. Sie erkennen diesen Zustand auch an dem\n        Download-Symbol <FontAwesomeIcon icon='download' /> neben der Kartenbezeichnung. Diese Karte\n        ist daher auch offline (ohne Internetzugang) verfügbar (vgl. Absatz{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Anmeldung und Offline-Benutzung\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Anmeldung und Offline-Benutzung\n        </Link>\n        ).\n      </p>\n      <p>\n        In der <strong>Vorschau</strong> wird Ihnen anhand eines beispielhaften Kartenausschnitts\n        stets die Wirkung Ihrer Basiskartenauswahl angezeigt.\n      </p>\n    </div>\n  );\n};\nexport default Hintergrundkarten;\n","const ThematischerDurchstich = () => {\n  return (\n    <div>\n      <p>\n        Die Darstellung der Potenzialflächen in der Karte erfolgt über leicht transparente\n        Farbflächen (mit dünnen, etwas abgedunkelten Umrandungen), wobei die verwendeten Farben die\n        verschiedenen Kategorien von Potenzialflächen repräsentieren. Diese Farben werden in der\n        Titelzeile der Info-Box aufgegriffen. Zusätzlich wird dort die Bezeichnung der jeweiligen\n        Kategorie ausgeprägt, also z. B. &quot;Wohnbaupotenzialflächen&quot; bei den roten Flächen.\n        Die Bedeutung der Flächenfarben erklärt sich auf diese Weise von selbst, sodass die\n        Kartenanwendung keine klassische Legendengrafik benötigt.\n      </p>\n      <p>\n        Die Kategorien der Potenzialflächen werden aus dem Fachverfahren WuNDa/Potenzialflächen in\n        die Anwendung Potenzialflächen-Online übernommen. Neben den auf Dauer angelegten Kategorien\n        wie Wohnbau- oder Gewerbepotenzialflächen können im Fachverfahren gelegentlich temporäre\n        Kategorien entstehen, z. B. für die Standortauswahl bei Infrastrukturprojekten. Entsprechend\n        kann sich auch die Liste der Kategorien in Potenzialflächen-Online und damit die Anzahl der\n        hier verwendeten Flächenfarben von Zeit zu Zeit verändern.\n      </p>\n    </div>\n  );\n};\nexport default ThematischerDurchstich;\n","import {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  faFilePdf,\n  faInfoCircle,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-scroll\";\nimport slugify from \"slugify\";\n\nconst Infobox = () => {\n  return (\n    <div>\n      <p>\n        Bewegen Sie den Mauszeiger im Kartenfenster auf eine der farbigen Flächen, mit denen die\n        Potenzialflächen in der Karte dargestellt werden, um sich die Bezeichnung der jeweiligen\n        Fläche anzeigen zu lassen. Durch Anklicken bzw. kurzes Antippen einer farbigen Fläche setzen\n        Sie den Fokus auf diese Potenzialfläche. Sie wird dann blau umrandet und mit geringerer\n        Transparenz dargestellt, was sie deutlicher hervortreten lässt. Außerdem werden direkt\n        einige Basisinformationen zu der ausgewählten Potenzialfläche in der Info-Box angezeigt,\n        nämlich die Bezeichnung der Fläche, ihre eindeutige Nummer und ihre Größe in m².\n      </p>\n      <p>\n        Außerdem werden Ihnen in der Info-Box einige weiterführende Funktionen zu der ausgewählten\n        Potenzialfläche angeboten. Mit der Lupenfunktion <FontAwesomeIcon icon={faSearch} /> wird\n        die Karte auf diese Fläche zentriert und gleichzeitig der größte Betrachtungsmaßstab\n        eingestellt, in dem die Fläche vollständig dargestellt werden kann. (Diesen Zoom können Sie\n        auch mit einem zweiten Anklicken oder Antippen einer bereits ausgewählten Potenzialfläche\n        bewirken.) Mit der Funktion{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Datenblattansicht\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Datenblatt anzeigen\n        </Link>{\" \"}\n        <FontAwesomeIcon icon={faInfoCircle} /> öffnen Sie ein Anwendungsfenster mit einer\n        interaktiven Datenblattansicht zur ausgewählten Potenzialfläche, die alle hierzu im\n        Fachverfahren WuNDa/Potenzialflächen geführten Informationen umfasst. Mit der Funktion{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Steckbriefe\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Steckbrief erzeugen\n        </Link>{\" \"}\n        <FontAwesomeIcon icon={faFilePdf} /> erzeugen Sie zu dieser Fläche einen Steckbrief in Form\n        eines PDF-Dokuments mit denselben Informationen wie in der Datenblattansicht.\n      </p>\n      <p>\n        Auf Endgeräten mit Touch-Display blinkt die Bezeichnung der Potenzialfläche beim ersten und\n        zweiten Antippen (Fokus auf diese Fläche, Zoom) kurz auf. Mit dem dritten Antippen wird die\n        Bezeichnung dauerhaft eingeblendet, bis zu Ihrer nächsten Bildschirmaktion (z. B. Antippen\n        der Karte außerhalb der aktuellen Potenzialfläche).{\" \"}\n      </p>\n      <p>\n        Potenzialflächen unterschiedlicher Kategorien können sich vollständig oder teilweise\n        überdecken. In diesem Fall werden entsprechend mehrere Info-Boxen übereinander angezeigt.\n        Sie werden dabei so versetzt, dass die farbigen Titelzeilen aller Info-Boxen noch\n        vollständig sichtbar sind. Durch Anklicken der jeweiligen Titelzeile setzen Sie den Fokus\n        auf die zugehörige Potenzialfläche. Die Info-Box zu dieser Potenzialfläche wird dadurch in\n        den Vordergrund geholt, zu den anderen Flächen sind dann nur noch die farbigen Titelzeilen\n        mit der Angabe der Flächenkategorie zu sehen.{\" \"}\n      </p>\n      <p>\n        Wenn Sie noch keine Potenzialfläche im aktuellen Kartenausschnitt selektiert haben, wird der\n        Fokus automatisch auf die nördlichste Fläche gesetzt. Ausgewertet wird dabei die Position\n        des Flächenschwerpunktes. Mit den Funktionen <a class='renderAsLink'>&lt;&lt;</a> vorheriger\n        Treffer und <a class='renderAsLink'>&gt;&gt;</a> nächster Treffer können Sie ausgehend von\n        dem Objekt, auf dem gerade der Fokus liegt, in nördlicher bzw. südlicher Richtung alle\n        aktuell im Kartenfenster angezeigten Objekte durchmustern.\n      </p>\n      <p>\n        Mit der Schaltfläche <FontAwesomeIcon icon={faChevronCircleDown} /> im dunkelgrau\n        abgesetzten rechten Rand der Info-Box lässt sich diese so verkleinern, dass nur noch die\n        Bezeichnung der Potenzialfläche sowie die Funktionssymbole angezeigt werden - nützlich für\n        Endgeräte mit kleinem Display. Mit der Schaltfläche{\" \"}\n        <FontAwesomeIcon icon={faChevronCircleUp} /> an derselben Stelle können Sie die Info-Box\n        dann wieder vollständig einblenden.\n      </p>\n    </div>\n  );\n};\nexport default Infobox;\n","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-scroll\";\nimport slugify from \"slugify\";\n\nconst Infobox = () => {\n  return (\n    <div>\n      <p>\n        Durch Anklicken bzw. Antippen des <FontAwesomeIcon icon={faInfoCircle} /> -Symbols in der\n        Info-Box öffnen Sie ein Anwendungsfenster mit einer interaktiven Datenblattansicht zu der\n        aktuell in der Info-Box beschriebenen Potenzialfläche, die alle im Fachverfahren\n        WuNDa/Potenzialflächen geführten Informationen zu dieser Fläche umfasst. Unter einem\n        Kopfbereich mit immer sichtbaren Basisinformationen zur Potenzialfläche ist das Datenblatt\n        in bis zu sechs thematische Blöcke von &quot;Lagebeschreibung&quot; bis\n        &quot;Bewertung&quot; gegliedert. Der Informationsumfang des Datenblattes variiert von\n        Fläche zu Fläche. Er ist insbesondere von der Flächenkategorie abhängig. So sind z. B. bei\n        den Baulücken regelmäßig nur die Blöcke &quot;Planungsrecht / Bauordnungsrecht&quot; und\n        &quot;Erweiterte Informationen&quot; belegt. Die einzelnen Blöcke lassen sich durch\n        Anklicken bzw. Antippen der Überschriften in den farbig unterlegten Titelbereichen ein- und\n        wieder ausklappen. Durch diese Möglichkeit ist die Datenblattansicht für die\n        Informationsentnahme auf einem mobilen Endgerät (z. B. einem Smartphone) besser geeignet als\n        der{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Steckbriefe\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          PDF-Steckbrief\n        </Link>{\" \"}\n        der Fläche.\n      </p>\n      <p>\n        Da die Fachdaten zu den Potenzialflächen im Cache-Speicher von Potenzialflächen-Online\n        gehalten werden, steht die Datenblattansicht auch im{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Anmeldung und Offline-Benutzung\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Offline-Modus\n        </Link>{\" \"}\n        zur Verfügung. Um die Datenblattansicht zu schließen, klicken Sie auf die Schaltflächen\n        &quot;Ok&quot; rechts im Fußbereich des Fensters.\n      </p>\n    </div>\n  );\n};\nexport default Infobox;\n","import { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-scroll\";\nimport slugify from \"slugify\";\n\nconst Infobox = () => {\n  return (\n    <div>\n      <p>\n        Durch Anklicken des <FontAwesomeIcon icon={faFilePdf} /> PDF-Symbols in der Info-Box\n        erzeugen Sie zu der aktuell in der Info-Box beschriebenen Potenzialfläche einen Steckbrief\n        mit allen Informationen, die im Fachverfahren WuNDa/Potenzialflächen zu dieser Fläche\n        geführt werden. Hierzu wird ein aktueller Bericht aus der WuNDa-Datenbank angefordert,\n        dessen einzelne Inhalte anschließend in eine PDF-Dokumentvorlage eingefügt werden. Die\n        Erzeugung der Steckbriefe ist daher im{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Anmeldung und Offline-Benutzung\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Offline-Modus\n        </Link>{\" \"}\n        nicht möglich! Nach der Fertigstellung des Berichtes wird dieser automatisch heruntergeladen\n        und in einem separaten Fenster geöffnet. Zur Anzeige des Steckbriefes wird die auf Ihrem\n        Endgerät für die Betrachtung von PDF-Dokumenten konfigurierte Anwendung gestartet, z. B. der\n        Adobe Acrobat Reader.{\" \"}\n      </p>\n      <p>\n        Im Fußbereich des Steckbriefes wird der Zeitstempel des angeforderten Datenbankberichtes\n        ausgeprägt - diese Angabe ist wichtig, um aktuelle Steckbriefe von veralteten Dokumenten\n        unterscheiden zu können. Im Feld &quot;Beschreibung der Fläche / Sachstand&quot; finden Sie\n        rechts oben eine Aktualitätsangabe der Daten zu dieser Fläche. Zu diesem Zeitpunkt hat die\n        Verwaltung die Informationen und/oder Bewertungen zu dieser Fläche in WuNDa/Potenzialflächen\n        zuletzt fortgeschrieben. Der Steckbrief verwendet als Hintergrundfarbe der Titelzeile und\n        für die Flächendarstellungen in den beiden eingebetteten Kartendarstellungen dieselben\n        Farben, die auch im Kartenfenster von Potenzialflächen-Online verwendet werden (s.{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Kartendarstellung der Potenzialflächen\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Kartendarstellung der Potenzialflächen\n        </Link>\n        ).\n      </p>\n      <p>\n        Das Layout der Steckbriefe ist für einen Ausdruck im Format DIN A4 optimiert. Wenn Sie mit\n        einem mobilen Endgerät mit entsprechend kleinem Bildschirm arbeiten, ist es für Sie\n        komfortabler, sich mit Hilfe der interaktiven{\" \"}\n        <Link\n          class='renderAsLink'\n          to={slugify(\"Datenblattansicht\")}\n          containerId={\"myMenu\"}\n          activeClass='active'\n        >\n          Datenblattansicht\n        </Link>{\" \"}\n        über die aktuell geladene Potenzialfläche zu informieren.{\" \"}\n      </p>\n    </div>\n  );\n};\nexport default Infobox;\n","import IconComp from \"react-cismap/commons/Icon\";\nimport InKartePositionierenOriginal from \"react-cismap/topicmaps/docBlocks/InKartePositionieren\";\nconst InKartePositionieren = () => {\n  return (\n    <div>\n      <InKartePositionierenOriginal\n        defaultContextValues={{\n          inKartePositionieren: {\n            grosseZoomstufe: 18,\n            listAddendum: (\n              <span>\n                Zusätzlich können Sie auch die Bezeichnung einer Potenzialfläche als Suchbegriff\n                eingeben. Die Kategorien der Treffer werden in der Auswahlliste durch die Symbole{\" \"}\n                <IconComp name='square' overlay='G' /> für <strong>G</strong>ewerbepotenzialflächen,{\" \"}\n                <IconComp name='square' overlay='W' /> für <strong>W</strong>ohnbaupotenzialflächen,{\" \"}\n                <IconComp name='square' overlay='N' /> für Wieder<strong>N</strong>\n                utzungspotenziale, <IconComp name='square' overlay='L' /> für Bau<strong>L</strong>\n                ücken und perspektivisch auch <IconComp name='square' overlay='B' /> für{\" \"}\n                <strong>B</strong>\n                rachflächen angezeigt. Beim turnusmäßigen Import der Daten aus dem Fachverfahren\n                WuNDa/Potenzialflächen werden für alle Potenzialflächen Aliasse generiert, die den\n                Kennbuchstaben aus den Kategorie-Symbolen und ein Leerzeichen als Präfix erhalten.\n                So entsteht z. B für die Wohnbauflächen &quot;Stollenstraße&quot; der Alias &quot;W\n                Stollenstraße&quot;. Damit können Sie durch die Eingabe des jeweiligen\n                Kennbuchstabens und eines Leerzeichens im Eingabefeld eine Auswahlliste aller\n                Potenzialflächen dieser Kategorie generieren, z. B. durch Eingabe von &quot;W &quot;\n                eine Auswahlliste aller Wohnbaupotenzialflächen.\n              </span>\n            ),\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default InKartePositionieren;\n","import GenericHelpTextForMyLocation from \"react-cismap/topicmaps/docBlocks/GenericHelpTextForMyLocation\";\n\nconst MeinStandort = () => {\n  return (\n    <div>\n      <GenericHelpTextForMyLocation />\n    </div>\n  );\n};\nexport default MeinStandort;\n","import { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ObjekteSuchen = () => {\n  return (\n    <div>\n      <p>\n        Unter &quot;<strong>Meine Potenzialflächen</strong>&quot; können Sie im Anwendungsmenü{\" \"}\n        <FontAwesomeIcon icon={faBars} /> auswählen, welche Kategorien von Potenzialflächen in der\n        Karte dargestellt werden. Durch Anklicken bzw. Antippen der Schaltfläche &quot;Filter\n        zurücksetzen&quot; machen Sie Ihre Auswahl dergestalt rückgängig, dass wieder alle\n        Kategorien zur Anzeige ausgewählt werden.\n      </p>\n      <p>\n        Ihre Einstellungen werden direkt in der blauen Titelzeile des Bereichs &quot;Meine\n        Potenzialflächen&quot; und in dem Donut-Diagramm, das Sie rechts neben oder unter den\n        Filteroptionen finden, ausgewertet. Die Titelzeile zeigt die Gesamtanzahl der\n        Potenzialflächen in den von Ihnen ausgewählten Kategorien. Das Donut-Diagramm zeigt\n        zusätzlich die Verteilung auf die einzelnen Kategorien. Bewegen Sie dazu den Mauszeiger auf\n        eines der farbigen Segmente des Diagramms.\n      </p>\n    </div>\n  );\n};\nexport default ObjekteSuchen;\n","const AnmeldungUndOfflineBenutzung = () => {\n  return (\n    <div>\n      <p>\n        Die interaktive Kartenanwendung &quot;Potenzialflächen-Online&quot; ist für die spezifische\n        Gruppe der Nutzer in Verwaltung und politischen Gremien gedacht, die in die Prozesse zur\n        Entwicklung von städtebaulichen Potenzialflächen involviert sind. Sie ist daher nicht\n        uneingeschränkt öffentlich zugänglich, sondern erfordert eine Anmeldung mit Benutzername und\n        Passwort. Die Zugangssteuerung erfolgt dabei über die Nutzerverwaltung des Wuppertaler\n        Navigations- und Datenmanagementsystems WuNDa. Zugangsdaten können bei der\n        WuNDa-Administration (<a href='mailto:wunda@stadt.wuppertal.de'>wunda@stadt.wuppertal.de</a>\n        ) beantragt werden, die hierzu auch ein{\" \"}\n        <a href='https://formulare.wuppertal.de/metaform/Form-Solutions/sid/assistant/61fbb0516de84f231ac18ee3'>\n          Online-Formular\n        </a>{\" \"}\n        bereitstellt.{\" \"}\n      </p>\n      <p>\n        Nach der Anmeldung bei Potenzialflächen-Online wird Ihr Nutzername im Titelbereich zusammen\n        mit der letzten Aktualisierung des Cache-Speichers der Kartenanwendung in der Form &quot;\n        <strong>Potenzialflächen-Online</strong> (Nutzername, Datum der letzten\n        Cache-Aktualisierung, Uhrzeit der letzten Cache-Aktualisierung)&quot; angezeigt. Hier finden\n        Sie auch den Hyperlink <a className='styleAsLink'>abmelden</a>, mit dem Sie die Anwendung in\n        den Offline-Modus versetzen können. Es erscheint dann zunächst wieder der Login-Dialog. Wenn\n        Sie hier auf &quot;Offline arbeiten&quot; klicken, greift die Anwendung nicht mehr via\n        Internet auf die servergespeicherten Fachdaten und Kartendienste zu, sondern auf deren im\n        Anwendungscache gespeicherte Kopien. Das Arbeiten im Offline-Modus ist sinnvoll, wenn sich\n        Ihr Einsatzort in einem Bereich mit schwacher oder unzuverlässiger Mobilfunknetzabdeckung\n        befindet (&quot;Funklöcher&quot;). Wichtig: im Offline-Modus müssen Sie im Abschnitt\n        &quot;Einstellungen&quot; des Anwendungsmenüs eine Vektor-<a href='url'>Hintergrundkarte</a>{\" \"}\n        auswählen, deren Daten auf Ihr Endgerät heruntergeladen werden können. Sie erkennen diese\n        Karten an dem Download-Symbol [Download-Icon] neben der Kartenbezeichnung. Im Offline-Modus\n        wird im Titelbereich anstelle Ihres Nutzernamens der Text &quot;Daten aus dem Cache&quot;\n        zusammen mit Datum und Uhrzeit der letzten Aktualisierung des Cache angezeigt. Der in diesem\n        Zustand angebotene Hyperlink <a href='url'>anmelden und Daten aktualisieren</a> öffnet\n        wiederum den Login-Dialog. Hier können Sie sich wieder mit Nutzername und Passwort anmelden,\n        wenn Sie das Funkloch verlassen haben.{\" \"}\n      </p>\n    </div>\n  );\n};\nexport default AnmeldungUndOfflineBenutzung;\n","import { useContext } from \"react\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport FilterPanel from \"react-cismap/topicmaps/menu/FilterPanel\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport { Link } from \"react-scroll\";\n\nimport MenuFooter from \"./MenuFooter\";\nimport Ueberblick from \"./onlinehelpsections/010_Ueberblick\";\nimport Fachdatenquellen from \"./onlinehelpsections/020_Fachdatenquellen\";\nimport Hintergrundkarten from \"./onlinehelpsections/030_Hintergrundkarte\";\nimport Kartendarstellung from \"./onlinehelpsections/040_Kartendarstellung\";\nimport FlaechenAuswaehlen from \"./onlinehelpsections/050_FlaechenAuswaehlen\";\nimport Datenblattansicht from \"./onlinehelpsections/052_Datenblattansicht\";\nimport Steckbriefe from \"./onlinehelpsections/054_Steckbriefe\";\nimport InKartePositionieren from \"./onlinehelpsections/060_InKartePositionieren\";\nimport MeinStandort from \"./onlinehelpsections/070_MeinStandort\";\nimport Filterung from \"./onlinehelpsections/080_Filterung\";\nimport AnmeldungUndOfflineBenutzung from \"./onlinehelpsections/090_AnmeldungUndOfflineBenutzung\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const { filterState, filterMode, filteredItems, shownFeatures } =\n    useContext(FeatureCollectionContext);\n  const { setFilterState, setFilterMode } = useContext(FeatureCollectionDispatchContext);\n\n  const { items } = useContext(FeatureCollectionContext);\n\n  let kampagnen = [];\n  const kampagnenValues = [];\n\n  for (const item of items || []) {\n    if (!kampagnen.includes(item.kampagne.bezeichnung)) {\n      kampagnen.push(item.kampagne.bezeichnung);\n      kampagnenValues.push({\n        key: item.kampagne.bezeichnung,\n        title: item.kampagne.bezeichnung,\n        color: item.kampagne.color,\n        icon: \"square\",\n        iconPos: \"pre\",\n        order: item.kampagne.order_by,\n      });\n    }\n  }\n  kampagnenValues.sort((a, b) => {\n    return parseInt(a.order) - parseInt(b.order);\n  });\n\n  //delte and add sorted kamapgnen again\n  kampagnen = [];\n  for (const kampagnenvalue of kampagnenValues) {\n    kampagnen.push(kampagnenvalue.key);\n  }\n  const filterConfiguration = {\n    mode: \"list\", // list or tabs\n    resetedFilter: {\n      kampagnen,\n    },\n    filters: [\n      {\n        title: \"Kategorien\",\n        key: \"kampagnen\",\n        icon: \"layer-group\",\n        type: \"checkBoxes\", //\"tags\" or \"checkBoxes\",\n        values: kampagnenValues,\n        setAll: () => {\n          setFilterState({ ...filterState, kampagnen });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, kampagnen: [] });\n        },\n        // colorizer: (item, selected) => {\n        //   console.log(\"yyy colorizer item\", item);\n\n        //   return selected ? item.kampagne.color : \"#ee00ee\";\n        // },\n      },\n    ],\n  };\n\n  if (filterState === undefined && items !== undefined && items.length !== 0) {\n    setFilterState({ kampagnen });\n  }\n  if (filterMode === undefined && items !== undefined) {\n    setFilterMode(\"kampagnen\");\n  }\n\n  const getFilterHeader = () => {\n    const count = filteredItems?.length || 0;\n\n    let term;\n    if (count === 1) {\n      term = \"Fläche\";\n    } else {\n      term = \"Flächen\";\n    }\n\n    return `Meine Potenzialflächen (${count} ${term} gefunden, davon ${\n      shownFeatures?.length || \"0\"\n    } in der Karte)`;\n  };\n\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Filter, Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Benutzen Sie die Filtermöglichkeiten unter{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='filter'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"filter\")}\n          >\n            Meine Potenzialflächen\n          </Link>\n          , um die in der Karte angezeigten Potenzialflächen auf die für Sie relevanten Themen zu\n          beschränken. Über{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='settings'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"settings\")}\n          >\n            Einstellungen\n          </Link>{\" \"}\n          können Sie die Darstellung der Hintergrundkarte an Ihre Interessen anpassen. Wählen Sie\n          die{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='help'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"help\")}\n          >\n            Kompaktanleitung\n          </Link>{\" \"}\n          für detailliertere Bedienungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <Section\n          key='filter'\n          sectionKey='filter'\n          sectionTitle={getFilterHeader()}\n          sectionBsStyle='primary'\n          sectionContent={<FilterPanel filterConfiguration={filterConfiguration} />}\n        />,\n        <DefaultSettingsPanel\n          key='settings'\n          skipFilterTitleSettings={true}\n          skipClusteringSettings={true}\n          skipSymbolsizeSetting={true}\n        />,\n\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks\n              configs={[\n                {\n                  type: \"FAQS\",\n                  configs: [\n                    {\n                      title: \"Überblick\",\n                      bsStyle: \"secondary\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Ueberblick />,\n                      },\n                    },\n                    {\n                      title: \"Fachdatenquellen\",\n                      bsStyle: \"secondary\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Fachdatenquellen />,\n                      },\n                    },\n                    {\n                      title: \"Hintergrundkarte\",\n                      bsStyle: \"secondary\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Hintergrundkarten />,\n                      },\n                    },\n                    {\n                      title: \"Kartendarstellung der Potenzialflächen\",\n                      bsStyle: \"secondary\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Kartendarstellung />,\n                      },\n                    },\n                    /*----------------------------------------------------------------------------------------------------------------------*/\n                    {\n                      title: \"Flächen auswählen und abfragen\",\n                      bsStyle: \"success\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <FlaechenAuswaehlen />,\n                      },\n                    },\n                    {\n                      title: \"Datenblattansicht\",\n                      bsStyle: \"success\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Datenblattansicht />,\n                      },\n                    },\n                    {\n                      title: \"Steckbriefe\",\n                      bsStyle: \"success\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Steckbriefe />,\n                      },\n                    },\n                    {\n                      title: \"In Karte positionieren\",\n                      bsStyle: \"success\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <InKartePositionieren />,\n                      },\n                    },\n                    {\n                      title: \"Mein Standort\",\n                      bsStyle: \"success\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <MeinStandort />,\n                      },\n                    },\n                    /*----------------------------------------------------------------------------------------------------------------------*/\n                    {\n                      title: 'Filterung (\"Meine Potenzialflächen\")',\n                      bsStyle: \"warning\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <Filterung />,\n                      },\n                    },\n                    {\n                      title: \"Anmeldung und Offline-Benutzung\",\n                      bsStyle: \"warning\",\n                      contentBlockConf: {\n                        type: \"REACTCOMP\",\n                        content: <AnmeldungUndOfflineBenutzung />,\n                      },\n                    },\n                  ],\n                },\n              ]}\n            />\n          }\n        />,\n      ]}\n      menuFooter={<MenuFooter />}\n    />\n  );\n};\nexport default MyMenu;\n","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nconst InfoPanel = () => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  const potenzialflaeche = selectedFeature?.properties;\n\n  if (potenzialflaeche !== undefined) {\n    const subSections = [];\n\n    const display = (desc, value, valFunc) => {\n      if (value && valFunc === undefined && Array.isArray(value) === false) {\n        return (\n          <div>\n            <b>{desc}:</b> {value}\n          </div>\n        );\n      } else if (value && valFunc === undefined && Array.isArray(value) === true) {\n        return (\n          <div>\n            <b>{desc}:</b> {value.join(\", \")}\n          </div>\n        );\n      } else if (value && valFunc !== undefined) {\n        return (\n          <div>\n            <b>{desc}:</b> {valFunc(value)}\n          </div>\n        );\n      }\n    };\n\n    if (\n      potenzialflaeche?.lagebewertung_verkehr ||\n      potenzialflaeche?.oepnv ||\n      potenzialflaeche?.naehe_zu ||\n      potenzialflaeche?.siedlungsraeumliche_lage ||\n      potenzialflaeche?.topografie ||\n      potenzialflaeche?.hang\n    ) {\n      subSections.push(\n        <SecondaryInfoPanelSection key='standort' bsStyle='info' header={\"Lagebeschreibung\"}>\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {display(\"Lagebewertung Verkehr\", potenzialflaeche?.lagebewertung_verkehr)}\n            {display(\"ÖPNV Qualität\", potenzialflaeche?.oepnv)}\n            {display(\"Nähe zu\", potenzialflaeche?.naehe_zu)}\n            {display(\"Siedlungsräumliche Lage\", potenzialflaeche?.siedlungsraeumliche_lage)}\n            {display(\"Topografie\", potenzialflaeche?.topografie)}\n            {display(\"Hangrichtung\", potenzialflaeche?.hang)}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    if (\n      potenzialflaeche?.regionalplan ||\n      potenzialflaeche?.bplaene ||\n      potenzialflaeche?.festsetzungen_bplan ||\n      potenzialflaeche?.bauordnungsrecht_genehmigung ||\n      potenzialflaeche?.bauordnungsrecht_genehmigung ||\n      potenzialflaeche?.stand_bauordnungsrecht\n    ) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='standort'\n          bsStyle='danger'\n          header={<span>Planungsrecht / Bauordnungsrecht</span>}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {display(\"Regionalplan\", potenzialflaeche?.regionalplan)}\n            {/* {display(\"Flächennutzungsplan\", potenzialflaeche?.)} */}\n            {display(\"Bebauungspläne\", potenzialflaeche?.bplaene)}\n            {display(\"Festsetzungen\", potenzialflaeche?.festsetzungen_bplan)}\n\n            {/* bauordnungsrecht_baulast kommt noch dazu*/}\n            {display(\"Bauordnungsrecht (Stand)\", potenzialflaeche?.stand_bauordnungsrecht)}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n\n    if (\n      potenzialflaeche?.umgebungsnutzung ||\n      potenzialflaeche?.brachflaechen ||\n      potenzialflaeche?.jahr_brachflaeche ||\n      potenzialflaeche?.bisherige_nutzung ||\n      potenzialflaeche?.bestand_bebauung ||\n      potenzialflaeche?.versiegelung ||\n      potenzialflaeche?.aeussere_erschliessung ||\n      potenzialflaeche?.wohnlagen ||\n      potenzialflaeche?.klimainformationen\n    ) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='standort'\n          bsStyle='success'\n          header={\"Erweiterte Informationen\"}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {display(\"Umgebungsnutzung\", potenzialflaeche?.umgebungsnutzung)}\n            {display(\"Brachfläche\", potenzialflaeche?.brachflaechen)}\n            {display(\"Nutzungsaufgabe\", potenzialflaeche?.jahr_brachflaeche)}\n            {display(\"Bisherige Nutzung\", potenzialflaeche?.bisherige_nutzung)}\n            {display(\"Bestand Bebauung\", potenzialflaeche?.bestand_bebauung)}\n            {display(\"Bestand Versiegelung\", potenzialflaeche?.versiegelung)}\n            {display(\"Äußere Erschließung\", potenzialflaeche?.aeussere_erschliessung)}\n            {display(\"Wohnlagen\", potenzialflaeche?.wohnlagen)}\n            {/* {display(\"Bodenrichtwerte\", potenzialflaeche?.)} */}\n            {/* {display(\"Stadtraumtypen\", potenzialflaeche?.)} */}\n            {display(\"Klimainformationen\", potenzialflaeche?.klimainformationen)}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    if (potenzialflaeche?.beschreibung_flaeche) {\n      subSections.push(\n        <SecondaryInfoPanelSection key='standort' bsStyle='warning' header={\"Beschreibung\"}>\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {potenzialflaeche?.beschreibung_flaeche.split(\"\\n\").map((part, index) => {\n              return <p key={\"beschreibung.part\" + index}>{part}</p>;\n            })}\n\n            {display(\"Quelle\", potenzialflaeche?.quelle)}\n            {display(\"Stand\", potenzialflaeche?.stand, (d) => {\n              try {\n                const date = new Date(d);\n                return date.getDate() + \".\" + (date.getMonth() + 1) + \".\" + date.getFullYear();\n              } catch (e) {\n                return d;\n              }\n            })}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    if (potenzialflaeche?.notwendige_massnahmen) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='standort'\n          bsStyle='success'\n          header={\"Notwendige Maßnahmen / Nächste Schritte\"}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <p>{potenzialflaeche?.notwendige_massnahmen}</p>\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    if (\n      potenzialflaeche?.kategorie ||\n      potenzialflaeche?.potenzialart ||\n      potenzialflaeche?.entwicklungsstand ||\n      potenzialflaeche?.restriktionen ||\n      potenzialflaeche?.empfohlene_nutzungen_wohnen ||\n      potenzialflaeche?.wohneinheiten ||\n      potenzialflaeche?.entwicklungsaussichten ||\n      potenzialflaeche?.verfuegbarkeit ||\n      potenzialflaeche?.verwertbarkeit ||\n      potenzialflaeche?.handlungsprioritaet ||\n      potenzialflaeche?.empfohlene_nutzungen ||\n      potenzialflaeche?.revitalisierung ||\n      potenzialflaeche?.handlungsdruck\n    ) {\n      subSections.push(\n        <SecondaryInfoPanelSection key='standort' bsStyle='info' header={\"Bewertung\"}>\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {display(\"Kategorie\", potenzialflaeche?.kategorie)}\n            {display(\"Potenzialart\", potenzialflaeche?.potenzialart)}\n            {display(\"Entwicklungsstand\", potenzialflaeche?.entwicklungsstand)}\n            {display(\"Restriktionen / Hemnisse\", potenzialflaeche?.restriktionen)}\n            {display(\n              \"Empfohlene Art der Wohnnutzung\",\n              potenzialflaeche?.empfohlene_nutzungen_wohnen\n            )}\n            {display(\"Anzahl mög. Wohneinheiten\", potenzialflaeche?.wohneinheiten, (t) => (\n              <span>\n                {potenzialflaeche?.anzahl_wohneinheiten && (\n                  <span> {potenzialflaeche?.anzahl_wohneinheiten}</span>\n                )}{\" \"}\n                {t}\n              </span>\n            ))}\n\n            {display(\"Entwicklungsaussichten\", potenzialflaeche?.entwicklungsaussichten)}\n            {display(\"Verfügbarkeit\", potenzialflaeche?.verfuegbarkeit)}\n            {display(\"Verwertbarkeit\", potenzialflaeche?.verwertbarkeit)}\n            {display(\"Handlungspriorität (Verwaltung)\", potenzialflaeche?.handlungsprioritaet)}\n            {display(\"Empfohlene Nutzung\", potenzialflaeche?.empfohlene_nutzungen)}\n            {display(\"Revitalisierung\", potenzialflaeche?.revitalisierung)}\n            {display(\"Handlungsdruck\", potenzialflaeche?.handlungsdruck)}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    // if (potenzialflaeche?.interne_hinweise) {\n    //   subSections.push(\n    //     <SecondaryInfoPanelSection key='standort' bsStyle='secondary' header={\"Interne Hinweise\"}>\n    //       <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n    //         {potenzialflaeche?.interne_hinweise.split(\"\\n\").map((part, index) => {\n    //           return <p key={\"interne_hinweise.part\" + index}>{part}</p>;\n    //         })}\n    //       </div>\n    //     </SecondaryInfoPanelSection>\n    //   );\n    // }\n\n    const showRawData = new URLSearchParams(window.location.href).get(\"showRawData\");\n    if (showRawData !== null) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='standort'\n          bsStyle='info'\n          header={\"Potenzialfläche (raw data): \" + potenzialflaeche?.nummer}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <pre>{JSON.stringify(potenzialflaeche, null, 2)}</pre>\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\"Datenblatt: \" + potenzialflaeche?.bezeichnung}\n        mainSection={\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <div>\n              {display(\"Nummer\", potenzialflaeche?.nummer)}\n              {display(\"Bezeichnung\", potenzialflaeche?.bezeichnung)}\n              {display(\"Kampagne\", potenzialflaeche?.kampagne?.bezeichnung)}\n              {display(\"Flächengröße\", potenzialflaeche?.groesse, (a) => (\n                <span>\n                  {a.toLocaleString()} m² (circa{\" \"}\n                  {(Math.round((a / 10000) * 10) / 10).toLocaleString()} ha)\n                </span>\n              ))}\n              {display(\"Stadtbezirk(e)\", potenzialflaeche?.stadtbezirke, (sb) => sb.join(\", \"))}\n              {display(\"Quartier(e)\", potenzialflaeche?.quartiere, (q) => q.join(\", \"))}\n              {display(\"Eigentümer\", potenzialflaeche?.eigentuemer, (e) => e.join(\", \"))}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useContext, useEffect } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport {\n  TopicMapContext,\n  TopicMapDispatchContext,\n} from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport { removeQueryPart } from \"react-cismap/tools/routingHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport FeatureCollection from \"./components/FeatureCollection\";\nimport InfoBox from \"./components/InfoBox\";\nimport MyMenu from \"./components/Menu\";\nimport InfoPanel from \"./components/SecondaryInfo\";\n\n// import consolere from \"console-remote-client\";\n\n// consolere.connect({\n//   server: \"http://bender:8088\",\n//   channel: \"pf\", // required\n//   redirectDefaultConsoleToRemote: false, // optional, default: false\n//   disableDefaultConsoleOutput: false, // optional, default: false\n// });\n\n// console.re.log(\"S T A R T\");\n\nconst baseLayerConf = { ...defaultLayerConf };\nbaseLayerConf.namedLayers.cismetLight = {\n  type: \"vector\",\n  style: \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n};\n\nexport const appKey = \"Potenzialflaechen.Online.Wuppertal\";\n\nfunction PotenzialflaechenOnlineMap({ gazData, jwt, setJWT, setLoginInfo }) {\n  const { setSelectedFeatureByPredicate, setFilterState } = useContext(\n    FeatureCollectionDispatchContext\n  );\n  const { zoomToFeature } = useContext(TopicMapDispatchContext);\n  const { history } = useContext(TopicMapContext);\n  const { setAppMenuActiveMenuSection, setAppMenuVisible } = useContext(UIDispatchContext);\n\n  useEffect(() => {\n    const handleCleanStart = (search) => {\n      const foundCleanStart = new URLSearchParams(search).get(\"cleanStart\") != null;\n      if (foundCleanStart === true) {\n        let newSearch = removeQueryPart(search, \"cleanStart\");\n        history.push(newSearch);\n        setFilterState({ kampagnen: [] });\n        setAppMenuVisible(true);\n        setTimeout(() => {\n          setAppMenuActiveMenuSection(\"filter\");\n        }, 50);\n      }\n    };\n    handleCleanStart(history.location.search);\n    return history.listen(() => {\n      handleCleanStart(history.location.search);\n    });\n  }, [history, setFilterState, setAppMenuVisible, setAppMenuActiveMenuSection]);\n\n  return (\n    <TopicMapComponent\n      mapStyle={{ backgroundColor: \"white\" }}\n      applicationMenuTooltipString='Filter | Einstellungen | Anleitung'\n      gazData={gazData}\n      homeZoom={13}\n      maxZoom={22}\n      locatorControl={true}\n      modalMenu={<MyMenu />}\n      //backgroundlayers='wupp-plan-live@40'\n      // backgroundlayers='OMT_Klokantech_basic'\n      // 'trueOrtho2020@20'\n      infoBox={\n        <InfoBox\n          pixelwidth={350}\n          config={{\n            displaySecondaryInfoAction: true,\n            city: \"Wuppertal\",\n            navigator: {\n              noun: {\n                singular: \"Potenzialfläche\",\n                plural: \"Potenzialflächen\",\n              },\n            },\n            noCurrentFeatureTitle: \"Keine Potenzialflächen gefunden\",\n            noCurrentFeatureContent: \"\",\n          }}\n        />\n      }\n      secondaryInfo={<InfoPanel />}\n      gazetteerHitTrigger={(hits) => {\n        if (Array.isArray(hits) && hits[0]?.more?.pid) {\n          setSelectedFeatureByPredicate((feature) => {\n            try {\n              const check = parseInt(feature.properties.id) === hits[0].more.pid;\n              if (check === true) {\n                zoomToFeature(feature);\n              }\n              return check;\n            } catch (e) {\n              return false;\n            }\n          });\n        }\n      }}\n    >\n      <FeatureCollection jwt={jwt} setJWT={setJWT} setLoginInfo={setLoginInfo} />\n      {/* <LogSelection /> */}\n    </TopicMapComponent>\n  );\n}\n\nexport default PotenzialflaechenOnlineMap;\n","export const offlineConfig = {\n  rules: [\n    {\n      origin: \"https://omt.map-hosting.de/fonts/Metropolis Medium Italic,Noto\",\n      cachePath: \"fonts/Open\",\n    },\n    {\n      origin: \"https://omt.map-hosting.de/fonts/Klokantech Noto\",\n      cachePath: \"fonts/Open\",\n    },\n    {\n      origin: \"https://omt.map-hosting.de/fonts/Metropolis Regular,Noto\",\n      cachePath: \"fonts/Open\",\n      realServerFallback: false,\n    },\n    {\n      origin: \"https://omt.map-hosting.de/fonts\",\n      cachePath: \"fonts\",\n    },\n    {\n      origin: \"https://omt.map-hosting.de/styles\",\n      cachePath: \"styles\",\n    },\n\n    {\n      origin: \"https://omt.map-hosting.de/data/v3\",\n      cachePath: \"tiles\",\n    },\n\n    {\n      origin: \"https://omt.map-hosting.de/data/gewaesser\",\n      cachePath: \"tiles.gewaesser\",\n    },\n\n    {\n      origin: \"https://omt.map-hosting.de/data/kanal\",\n      cachePath: \"tiles.kanal\",\n    },\n\n    {\n      origin: \"https://omt.map-hosting.de/data/brunnen\",\n      cachePath: \"tiles.brunnen\",\n      // realServerFallback: true, //this can override the globalsetting\n    },\n  ],\n  dataStores: [\n    {\n      name: \"Vektorkarte für Wuppertal\",\n      key: \"wuppBasemap\",\n      url: \"https://offline-data.cismet.de/offline-data/wupp.zip\",\n    },\n\n    {\n      name: \"Gewässer, Kanal und Brunnendaten\",\n      key: \"umweltalarm\",\n      url: \"https://offline-data.cismet.de/offline-data/umweltalarm.zip\",\n    },\n  ],\n  offlineStyles: [\n    \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n    \"https://omt.map-hosting.de/styles/osm-bright-grey/style.json\",\n    \"https://omt.map-hosting.de/styles/brunnen/style.json\",\n    \"https://omt.map-hosting.de/styles/kanal/style.json\",\n    \"https://omt.map-hosting.de/styles/gewaesser/style.json\",\n  ],\n  realServerFallback: true, //should be true in production\n  consoleDebug: false,\n  optional: true,\n  initialActive: true,\n};\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Color from \"color\";\nimport \"leaflet/dist/leaflet.css\";\nimport localforage from \"localforage\";\nimport { useEffect, useState } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { MappingConstants } from \"react-cismap\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { getInternetExplorerVersion } from \"react-cismap/tools/browserHelper\";\nimport { md5ActionFetchDAQ, md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport \"react-cismap/topicMaps.css\";\nimport \"./App.css\";\nimport LoginForm from \"./components/LoginForm\";\nimport SteckbriefActionFactory from \"./components/SteckbriefActionFactory\";\nimport Title from \"./components/TitleControl\";\nimport Waiting from \"./components/Waiting\";\nimport PotenzialflaechenOnlineMap from \"./PotenzialflaechenOnlineMap\";\nimport convertItemToSimpleFeature from \"./utils/convertItemToSimpleFeature\";\nimport itemFilterFunction from \"./utils/filterFunction\";\nimport { offlineConfig } from \"./offlineConfig\";\n\nconst baseLayerConf = { ...defaultLayerConf };\nbaseLayerConf.namedLayers.cismetLight = {\n  type: \"vector\",\n  style: \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n  offlineAvailable: true,\n  offlineDataStoreKey: \"wuppBasemap\",\n};\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\nconst selectionColor = new Color(\"#2664D8\");\nexport const appKey = \"Potenzialflaechen.Online.Wuppertal\";\nexport const apiUrl = \"https://potenzialflaechen-online-api.cismet.de\";\nexport const dataDaqKey = \"potenzialflaechen\";\nexport const gazDaqKey = \"potenzialflaechenGaz\";\nconst getGazData = async (setStaticGazData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n  sources.adressen = await md5FetchText(prefix, host + \"/data/3857/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/3857/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/3857/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/3857/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/3857/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setStaticGazData(gazData);\n};\n\nfunction App() {\n  const [staticGazData, setStaticGazData] = useState([]);\n  const [dynGazData, setDynGazData] = useState([]);\n  const [gazData, setGazData] = useState([]);\n\n  useEffect(() => {\n    setGazData([...(dynGazData || []), ...staticGazData]);\n  }, [staticGazData, dynGazData]);\n\n  useEffect(() => {\n    getGazData(setStaticGazData);\n    document.title = \"Potenzialflächen-Online Wuppertal\";\n  }, []);\n\n  const [jwt, _setJWT] = useState();\n  const [loginInfo, setLoginInfo] = useState();\n\n  const [waiting, setWaiting] = useState();\n\n  const setJWT = (jwt) => {\n    /*eslint no-useless-concat: \"off\"*/\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\", jwt);\n    _setJWT(jwt);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const jwtInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\");\n      if (jwtInCache) {\n        setJWT(jwtInCache);\n      } else {\n        setJWT(undefined);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (jwt) {\n      md5ActionFetchDAQ(appKey, apiUrl, jwt, gazDaqKey)\n        .then(\n          (potenzialflaechenGazResult) => {\n            setDynGazData(potenzialflaechenGazResult.data);\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n            setDynGazData([]);\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n    } else {\n      setDynGazData([]);\n    }\n  }, [jwt]);\n\n  let backgroundModes;\n  if (getInternetExplorerVersion() === -1) {\n    backgroundModes = [\n      {\n        title: \"Stadtplan (grau)\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Stadtplan (Vektordaten light)\",\n        mode: \"default\",\n        layerKey: \"vector\",\n        offlineDataStoreKey: \"wuppBasemap\",\n      },\n      {\n        title: \"Amtliche Basiskarte\",\n        mode: \"default\",\n        layerKey: \"abkg\",\n      },\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  } else {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Amtliche Basiskarte\",\n        mode: \"default\",\n        layerKey: \"abkg\",\n      },\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  }\n  const backgroundConfigurations = {\n    lbk: {\n      layerkey: \"rvrGrundriss@70|trueOrtho2020@40|rvrSchriftNT@100\",\n      src: \"/images/rain-hazard-map-bg/ortho.png\",\n      title: \"Luftbildkarte\",\n    },\n    stadtplan: {\n      layerkey: \"rvrGrau@45\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    vector: {\n      layerkey: \"cismetLight\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    abkg: {\n      layerkey: \"bplan_abkg@70\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Amtliche Basiskarte\",\n    },\n  };\n\n  return (\n    <TopicMapContextProvider\n      appKey={appKey}\n      backgroundConfigurations={backgroundConfigurations}\n      baseLayerConf={baseLayerConf}\n      offlineCacheConfig={offlineConfig}\n      backgroundModes={backgroundModes}\n      referenceSystem={MappingConstants.crs3857}\n      mapEPSGCode='3857'\n      referenceSystemDefinition={MappingConstants.proj4crs3857def}\n      maskingPolygon='POLYGON((668010.063156992 6750719.23021889,928912.612468322 6757273.20343972,930494.610325512 6577553.43685138,675236.835570551 6571367.64964125,668010.063156992 6750719.23021889))'\n      getColorFromProperties={(item) => item.kampagne.color}\n      itemFilterFunction={itemFilterFunction}\n      classKeyFunction={(item) => item?.kampagne?.bezeichnung}\n      convertItemToFeature={(_item) => {\n        const f = convertItemToSimpleFeature(_item);\n        f.properties.genericLinks = [\n          SteckbriefActionFactory({ setWaiting, item: f.properties, jwt, setJWT, setLoginInfo }),\n        ];\n        return f;\n      }}\n      alwaysShowAllFeatures={false}\n      getFeatureStyler={() => {\n        return (feature) => {\n          const c = new Color(feature.properties.color);\n          let borderColor, fillOpacity;\n          if (feature.selected === true) {\n            fillOpacity = 0.85;\n            borderColor = selectionColor;\n          } else {\n            fillOpacity = 0.6;\n            borderColor = c.darken(0.1);\n          }\n          const style = {\n            color: borderColor,\n            radius: 5,\n            weight: 2,\n            opacity: 0.7,\n            fillColor: c,\n            fillOpacity,\n          };\n          return style;\n        };\n      }}\n      featureTooltipFunction={(feature) => feature?.text}\n    >\n      {jwt === undefined && (\n        <LoginForm\n          key={\"login.\"}\n          setJWT={setJWT}\n          loginInfo={loginInfo}\n          setLoginInfo={setLoginInfo}\n        />\n      )}\n      {jwt !== undefined && (\n        <Title\n          logout={() => {\n            setJWT(undefined);\n            setLoginInfo({ color: \"#69D2E7\", text: \"Sie wurden erfolgreich abgemeldet.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }}\n          jwt={jwt}\n        />\n      )}\n      <Waiting waiting={waiting} />\n\n      <PotenzialflaechenOnlineMap\n        gazData={gazData}\n        jwt={jwt}\n        setJWT={setJWT}\n        setLoginInfo={setLoginInfo}\n      />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}